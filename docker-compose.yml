services:
  motion:
    build: ./MD/
    restart: always
    container_name: motion
    ports:
      - *:*
  eco:
    build: ./ecology/
    restart: always
    container_name: eco
    ports:
      - *:*

  onyx_db:
    image: mongo
    restart: always
    container_name: onyx_db
    ports:
      - *:*
    networks:
      onyx_net:
        ipv4_address: "*"
    volumes:
      - onyx_vol:/data/db
      - *
    environment:
      MONGO_INITDB_ROOT_USERNAME: x
      MONGO_INITDB_ROOT_PASSWORD: x
    command: mongod --auth --config *
    #command: mongod -v *:* --auth --config *

  onyx_cache:
    container_name: onyx_cache
    image: redis:latest
    restart: always
    entrypoint: redis-server --appendonly yes --requirepass *** --maxmemory 512mb --maxmemory-policy allkeys-lru
    networks:
      onyx_net:
        ipv4_address: *
    ports:
      - "*:*"
    volumes:
      - onyx_vol:/data/redis/
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    #depends_on:
    #  - onyx_db

  onyx_api:
    build: ./onyx-api/
    restart: always
    container_name: onyx_api
    env_file:
      - .env-api
    ports:
      - *:*
      - *:*
    networks:
      onyx_net:
        ipv4_address: *
    depends_on:
      - onyx_db
      
  onyx_client:
    build: ./onyx-client/
    restart: always
    container_name: onyx_client
    env_file:
      - .env.local
    ports:
      - *:*
    networks:
      onyx_net:
        ipv4_address: *
    depends_on:
      - onyx_api
      
  onyx_dev_client:
    build: ./onyx-dev/onyx_client/
    restart: always
    container_name: onyx_dev_client
    env_file:
      - ./onyx-dev/.env.local
    ports:
      - *:*
    networks:
      onyx_net:
        ipv4_address: *
    depends_on:
      - onyx_api

volumes:
  outer_vol:
    name: outer_volume
  onyx_vol:
    name: onyx_volume

networks:
  outer_net:
    name: outer_network
    driver: bridge
  onyx_net:
    name: onyx_network
    driver: bridge
    ipam:
      config:
        - subnet: *
          gateway: *